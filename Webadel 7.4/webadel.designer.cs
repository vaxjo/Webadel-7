#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Webadel7.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_121619_webadel")]
	public partial class WebadelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDoor(Door instance);
    partial void UpdateDoor(Door instance);
    partial void DeleteDoor(Door instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    partial void InsertMessage_OriginalRoom(Message_OriginalRoom instance);
    partial void UpdateMessage_OriginalRoom(Message_OriginalRoom instance);
    partial void DeleteMessage_OriginalRoom(Message_OriginalRoom instance);
    partial void InsertUser_IP(User_IP instance);
    partial void UpdateUser_IP(User_IP instance);
    partial void DeleteUser_IP(User_IP instance);
    partial void InsertResource(Resource instance);
    partial void UpdateResource(Resource instance);
    partial void DeleteResource(Resource instance);
    partial void InsertUpload(Upload instance);
    partial void UpdateUpload(Upload instance);
    partial void DeleteUpload(Upload instance);
    partial void InsertBanishment(Banishment instance);
    partial void UpdateBanishment(Banishment instance);
    partial void DeleteBanishment(Banishment instance);
    partial void InsertVote(Vote instance);
    partial void UpdateVote(Vote instance);
    partial void DeleteVote(Vote instance);
    partial void InsertAuthToken(AuthToken instance);
    partial void UpdateAuthToken(AuthToken instance);
    partial void DeleteAuthToken(AuthToken instance);
    partial void InsertAutosave(Autosave instance);
    partial void UpdateAutosave(Autosave instance);
    partial void DeleteAutosave(Autosave instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertUserRoom(UserRoom instance);
    partial void UpdateUserRoom(UserRoom instance);
    partial void DeleteUserRoom(UserRoom instance);
    partial void InsertUser_PrevAlia(User_PrevAlia instance);
    partial void UpdateUser_PrevAlia(User_PrevAlia instance);
    partial void DeleteUser_PrevAlia(User_PrevAlia instance);
    partial void InsertPlonk(Plonk instance);
    partial void UpdatePlonk(Plonk instance);
    partial void DeletePlonk(Plonk instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public WebadelDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Webadel"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WebadelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebadelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebadelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebadelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Door> Doors
		{
			get
			{
				return this.GetTable<Door>();
			}
		}
		
		public System.Data.Linq.Table<Message> Messages
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		public System.Data.Linq.Table<Message_OriginalRoom> Message_OriginalRooms
		{
			get
			{
				return this.GetTable<Message_OriginalRoom>();
			}
		}
		
		public System.Data.Linq.Table<User_IP> User_IPs
		{
			get
			{
				return this.GetTable<User_IP>();
			}
		}
		
		public System.Data.Linq.Table<Resource> Resources
		{
			get
			{
				return this.GetTable<Resource>();
			}
		}
		
		public System.Data.Linq.Table<Upload> Uploads
		{
			get
			{
				return this.GetTable<Upload>();
			}
		}
		
		public System.Data.Linq.Table<Banishment> Banishments
		{
			get
			{
				return this.GetTable<Banishment>();
			}
		}
		
		public System.Data.Linq.Table<Vote> Votes
		{
			get
			{
				return this.GetTable<Vote>();
			}
		}
		
		public System.Data.Linq.Table<AuthToken> AuthTokens
		{
			get
			{
				return this.GetTable<AuthToken>();
			}
		}
		
		public System.Data.Linq.Table<Autosave> Autosaves
		{
			get
			{
				return this.GetTable<Autosave>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<UserRoom> UserRooms
		{
			get
			{
				return this.GetTable<UserRoom>();
			}
		}
		
		public System.Data.Linq.Table<User_PrevAlia> User_PrevAlias
		{
			get
			{
				return this.GetTable<User_PrevAlia>();
			}
		}
		
		public System.Data.Linq.Table<Plonk> Plonks
		{
			get
			{
				return this.GetTable<Plonk>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfiles
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserRooms", IsComposable=true)]
		public IQueryable<GetUserRoomsResult> GetUserRooms([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> includeNSFW)
		{
			return this.CreateMethodCallQuery<GetUserRoomsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, includeNSFW);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserMessages", IsComposable=true)]
		public IQueryable<GetUserMessagesResult> GetUserMessages([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> includeNSFW, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> includePlonks)
		{
			return this.CreateMethodCallQuery<GetUserMessagesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, includeNSFW, includePlonks);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNumNewMessages", IsComposable=true)]
		public IQueryable<GetNumNewMessagesResult> GetNumNewMessages([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> includeNSFW, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> includePlonks)
		{
			return this.CreateMethodCallQuery<GetNumNewMessagesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, includeNSFW, includePlonks);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetLastMessages", IsComposable=true)]
		public IQueryable<GetLastMessagesResult> GetLastMessages()
		{
			return this.CreateMethodCallQuery<GetLastMessagesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Door")]
	public partial class Door : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _userId;
		
		private string _doorUrl;
		
		private string _data;
		
		private System.Guid _token;
		
		private System.DateTime _tokenExpiration;
		
		private System.DateTime _created;
		
		private System.DateTime _lastUpdated;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OndoorUrlChanging(string value);
    partial void OndoorUrlChanged();
    partial void OndataChanging(string value);
    partial void OndataChanged();
    partial void OntokenChanging(System.Guid value);
    partial void OntokenChanged();
    partial void OntokenExpirationChanging(System.DateTime value);
    partial void OntokenExpirationChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnlastUpdatedChanging(System.DateTime value);
    partial void OnlastUpdatedChanged();
    #endregion
		
		public Door()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doorUrl", DbType="VarChar(256) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string doorUrl
		{
			get
			{
				return this._doorUrl;
			}
			set
			{
				if ((this._doorUrl != value))
				{
					this.OndoorUrlChanging(value);
					this.SendPropertyChanging();
					this._doorUrl = value;
					this.SendPropertyChanged("doorUrl");
					this.OndoorUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_token", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid token
		{
			get
			{
				return this._token;
			}
			set
			{
				if ((this._token != value))
				{
					this.OntokenChanging(value);
					this.SendPropertyChanging();
					this._token = value;
					this.SendPropertyChanged("token");
					this.OntokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tokenExpiration", DbType="DateTime NOT NULL")]
		public System.DateTime tokenExpiration
		{
			get
			{
				return this._tokenExpiration;
			}
			set
			{
				if ((this._tokenExpiration != value))
				{
					this.OntokenExpirationChanging(value);
					this.SendPropertyChanging();
					this._tokenExpiration = value;
					this.SendPropertyChanged("tokenExpiration");
					this.OntokenExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime lastUpdated
		{
			get
			{
				return this._lastUpdated;
			}
			set
			{
				if ((this._lastUpdated != value))
				{
					this.OnlastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._lastUpdated = value;
					this.SendPropertyChanged("lastUpdated");
					this.OnlastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Door", Storage="_User", ThisKey="userId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Doors.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Doors.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Message")]
	public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _roomId;
		
		private System.Guid _authorId;
		
		private System.Nullable<System.Guid> _recipientId;
		
		private System.DateTime _date;
		
		private string _body;
		
		private EntityRef<Message_OriginalRoom> _Message_OriginalRoom;
		
		private EntitySet<Resource> _Resources;
		
		private EntitySet<Upload> _Uploads;
		
		private EntitySet<Vote> _Votes;
		
		private EntityRef<Room> _Room;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnroomIdChanging(System.Guid value);
    partial void OnroomIdChanged();
    partial void OnauthorIdChanging(System.Guid value);
    partial void OnauthorIdChanged();
    partial void OnrecipientIdChanging(System.Nullable<System.Guid> value);
    partial void OnrecipientIdChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    #endregion
		
		public Message()
		{
			this._Message_OriginalRoom = default(EntityRef<Message_OriginalRoom>);
			this._Resources = new EntitySet<Resource>(new Action<Resource>(this.attach_Resources), new Action<Resource>(this.detach_Resources));
			this._Uploads = new EntitySet<Upload>(new Action<Upload>(this.attach_Uploads), new Action<Upload>(this.detach_Uploads));
			this._Votes = new EntitySet<Vote>(new Action<Vote>(this.attach_Votes), new Action<Vote>(this.detach_Votes));
			this._Room = default(EntityRef<Room>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroomIdChanging(value);
					this.SendPropertyChanging();
					this._roomId = value;
					this.SendPropertyChanged("roomId");
					this.OnroomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid authorId
		{
			get
			{
				return this._authorId;
			}
			set
			{
				if ((this._authorId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnauthorIdChanging(value);
					this.SendPropertyChanging();
					this._authorId = value;
					this.SendPropertyChanged("authorId");
					this.OnauthorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recipientId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> recipientId
		{
			get
			{
				return this._recipientId;
			}
			set
			{
				if ((this._recipientId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrecipientIdChanging(value);
					this.SendPropertyChanging();
					this._recipientId = value;
					this.SendPropertyChanged("recipientId");
					this.OnrecipientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Message_OriginalRoom", Storage="_Message_OriginalRoom", ThisKey="id", OtherKey="messageId", IsUnique=true, IsForeignKey=false)]
		public Message_OriginalRoom Message_OriginalRoom
		{
			get
			{
				return this._Message_OriginalRoom.Entity;
			}
			set
			{
				Message_OriginalRoom previousValue = this._Message_OriginalRoom.Entity;
				if (((previousValue != value) 
							|| (this._Message_OriginalRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Message_OriginalRoom.Entity = null;
						previousValue.Message = null;
					}
					this._Message_OriginalRoom.Entity = value;
					if ((value != null))
					{
						value.Message = this;
					}
					this.SendPropertyChanged("Message_OriginalRoom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Resource", Storage="_Resources", ThisKey="id", OtherKey="messageId")]
		public EntitySet<Resource> Resources
		{
			get
			{
				return this._Resources;
			}
			set
			{
				this._Resources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Upload", Storage="_Uploads", ThisKey="id", OtherKey="messageId")]
		public EntitySet<Upload> Uploads
		{
			get
			{
				return this._Uploads;
			}
			set
			{
				this._Uploads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Vote", Storage="_Votes", ThisKey="id", OtherKey="messageId")]
		public EntitySet<Vote> Votes
		{
			get
			{
				return this._Votes;
			}
			set
			{
				this._Votes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Message", Storage="_Room", ThisKey="roomId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.Messages.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.Messages.Add(this);
						this._roomId = value.id;
					}
					else
					{
						this._roomId = default(System.Guid);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message", Storage="_User", ThisKey="recipientId", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Messages.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Messages.Add(this);
						this._recipientId = value.id;
					}
					else
					{
						this._recipientId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message1", Storage="_User1", ThisKey="authorId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Messages1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Messages1.Add(this);
						this._authorId = value.id;
					}
					else
					{
						this._authorId = default(System.Guid);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resources(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Message = this;
		}
		
		private void detach_Resources(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Message = null;
		}
		
		private void attach_Uploads(Upload entity)
		{
			this.SendPropertyChanging();
			entity.Message = this;
		}
		
		private void detach_Uploads(Upload entity)
		{
			this.SendPropertyChanging();
			entity.Message = null;
		}
		
		private void attach_Votes(Vote entity)
		{
			this.SendPropertyChanging();
			entity.Message = this;
		}
		
		private void detach_Votes(Vote entity)
		{
			this.SendPropertyChanging();
			entity.Message = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Message_OriginalRoom")]
	public partial class Message_OriginalRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _messageId;
		
		private string _originalRoomName;
		
		private EntityRef<Message> _Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmessageIdChanging(System.Guid value);
    partial void OnmessageIdChanged();
    partial void OnoriginalRoomNameChanging(string value);
    partial void OnoriginalRoomNameChanged();
    #endregion
		
		public Message_OriginalRoom()
		{
			this._Message = default(EntityRef<Message>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid messageId
		{
			get
			{
				return this._messageId;
			}
			set
			{
				if ((this._messageId != value))
				{
					if (this._Message.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmessageIdChanging(value);
					this.SendPropertyChanging();
					this._messageId = value;
					this.SendPropertyChanged("messageId");
					this.OnmessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_originalRoomName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string originalRoomName
		{
			get
			{
				return this._originalRoomName;
			}
			set
			{
				if ((this._originalRoomName != value))
				{
					this.OnoriginalRoomNameChanging(value);
					this.SendPropertyChanging();
					this._originalRoomName = value;
					this.SendPropertyChanged("originalRoomName");
					this.OnoriginalRoomNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Message_OriginalRoom", Storage="_Message", ThisKey="messageId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Message Message
		{
			get
			{
				return this._Message.Entity;
			}
			set
			{
				Message previousValue = this._Message.Entity;
				if (((previousValue != value) 
							|| (this._Message.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Message.Entity = null;
						previousValue.Message_OriginalRoom = null;
					}
					this._Message.Entity = value;
					if ((value != null))
					{
						value.Message_OriginalRoom = this;
						this._messageId = value.id;
					}
					else
					{
						this._messageId = default(System.Guid);
					}
					this.SendPropertyChanged("Message");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_IP")]
	public partial class User_IP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _userId;
		
		private string _ip;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    #endregion
		
		public User_IP()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_IP", Storage="_User", ThisKey="userId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_IPs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_IPs.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resource")]
	public partial class Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<System.Guid> _messageId;
		
		private string _filename;
		
		private string _contentType;
		
		private System.DateTime _uploaded;
		
		private EntityRef<Message> _Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnmessageIdChanging(System.Nullable<System.Guid> value);
    partial void OnmessageIdChanged();
    partial void OnfilenameChanging(string value);
    partial void OnfilenameChanged();
    partial void OncontentTypeChanging(string value);
    partial void OncontentTypeChanged();
    partial void OnuploadedChanging(System.DateTime value);
    partial void OnuploadedChanged();
    #endregion
		
		public Resource()
		{
			this._Message = default(EntityRef<Message>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> messageId
		{
			get
			{
				return this._messageId;
			}
			set
			{
				if ((this._messageId != value))
				{
					if (this._Message.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmessageIdChanging(value);
					this.SendPropertyChanging();
					this._messageId = value;
					this.SendPropertyChanged("messageId");
					this.OnmessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filename", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string filename
		{
			get
			{
				return this._filename;
			}
			set
			{
				if ((this._filename != value))
				{
					this.OnfilenameChanging(value);
					this.SendPropertyChanging();
					this._filename = value;
					this.SendPropertyChanged("filename");
					this.OnfilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contentType", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string contentType
		{
			get
			{
				return this._contentType;
			}
			set
			{
				if ((this._contentType != value))
				{
					this.OncontentTypeChanging(value);
					this.SendPropertyChanging();
					this._contentType = value;
					this.SendPropertyChanged("contentType");
					this.OncontentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uploaded", DbType="DateTime2 NOT NULL")]
		public System.DateTime uploaded
		{
			get
			{
				return this._uploaded;
			}
			set
			{
				if ((this._uploaded != value))
				{
					this.OnuploadedChanging(value);
					this.SendPropertyChanging();
					this._uploaded = value;
					this.SendPropertyChanged("uploaded");
					this.OnuploadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Resource", Storage="_Message", ThisKey="messageId", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Message Message
		{
			get
			{
				return this._Message.Entity;
			}
			set
			{
				Message previousValue = this._Message.Entity;
				if (((previousValue != value) 
							|| (this._Message.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Message.Entity = null;
						previousValue.Resources.Remove(this);
					}
					this._Message.Entity = value;
					if ((value != null))
					{
						value.Resources.Add(this);
						this._messageId = value.id;
					}
					else
					{
						this._messageId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Message");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Upload")]
	public partial class Upload : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<System.Guid> _messageId;
		
		private string _filename;
		
		private System.Data.Linq.Binary _data;
		
		private string _contentType;
		
		private System.DateTime _created;
		
		private EntityRef<Message> _Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnmessageIdChanging(System.Nullable<System.Guid> value);
    partial void OnmessageIdChanged();
    partial void OnfilenameChanging(string value);
    partial void OnfilenameChanged();
    partial void OndataChanging(System.Data.Linq.Binary value);
    partial void OndataChanged();
    partial void OncontentTypeChanging(string value);
    partial void OncontentTypeChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    #endregion
		
		public Upload()
		{
			this._Message = default(EntityRef<Message>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> messageId
		{
			get
			{
				return this._messageId;
			}
			set
			{
				if ((this._messageId != value))
				{
					if (this._Message.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmessageIdChanging(value);
					this.SendPropertyChanging();
					this._messageId = value;
					this.SendPropertyChanged("messageId");
					this.OnmessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filename", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string filename
		{
			get
			{
				return this._filename;
			}
			set
			{
				if ((this._filename != value))
				{
					this.OnfilenameChanging(value);
					this.SendPropertyChanging();
					this._filename = value;
					this.SendPropertyChanged("filename");
					this.OnfilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contentType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string contentType
		{
			get
			{
				return this._contentType;
			}
			set
			{
				if ((this._contentType != value))
				{
					this.OncontentTypeChanging(value);
					this.SendPropertyChanging();
					this._contentType = value;
					this.SendPropertyChanged("contentType");
					this.OncontentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="SmallDateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Upload", Storage="_Message", ThisKey="messageId", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Message Message
		{
			get
			{
				return this._Message.Entity;
			}
			set
			{
				Message previousValue = this._Message.Entity;
				if (((previousValue != value) 
							|| (this._Message.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Message.Entity = null;
						previousValue.Uploads.Remove(this);
					}
					this._Message.Entity = value;
					if ((value != null))
					{
						value.Uploads.Add(this);
						this._messageId = value.id;
					}
					else
					{
						this._messageId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Message");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banishment")]
	public partial class Banishment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ip;
		
		private System.Nullable<System.DateTime> _expiration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void OnexpirationChanging(System.Nullable<System.DateTime> value);
    partial void OnexpirationChanged();
    #endregion
		
		public Banishment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiration", DbType="DateTime")]
		public System.Nullable<System.DateTime> expiration
		{
			get
			{
				return this._expiration;
			}
			set
			{
				if ((this._expiration != value))
				{
					this.OnexpirationChanging(value);
					this.SendPropertyChanging();
					this._expiration = value;
					this.SendPropertyChanged("expiration");
					this.OnexpirationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vote")]
	public partial class Vote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _messageId;
		
		private System.Guid _userId;
		
		private bool _vote1;
		
		private System.DateTime _datetime;
		
		private EntityRef<Message> _Message;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmessageIdChanging(System.Guid value);
    partial void OnmessageIdChanged();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void Onvote1Changing(bool value);
    partial void Onvote1Changed();
    partial void OndatetimeChanging(System.DateTime value);
    partial void OndatetimeChanged();
    #endregion
		
		public Vote()
		{
			this._Message = default(EntityRef<Message>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid messageId
		{
			get
			{
				return this._messageId;
			}
			set
			{
				if ((this._messageId != value))
				{
					if (this._Message.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmessageIdChanging(value);
					this.SendPropertyChanging();
					this._messageId = value;
					this.SendPropertyChanged("messageId");
					this.OnmessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="vote", Storage="_vote1", DbType="Bit NOT NULL")]
		public bool vote1
		{
			get
			{
				return this._vote1;
			}
			set
			{
				if ((this._vote1 != value))
				{
					this.Onvote1Changing(value);
					this.SendPropertyChanging();
					this._vote1 = value;
					this.SendPropertyChanged("vote1");
					this.Onvote1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime datetime
		{
			get
			{
				return this._datetime;
			}
			set
			{
				if ((this._datetime != value))
				{
					this.OndatetimeChanging(value);
					this.SendPropertyChanging();
					this._datetime = value;
					this.SendPropertyChanged("datetime");
					this.OndatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Vote", Storage="_Message", ThisKey="messageId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Message Message
		{
			get
			{
				return this._Message.Entity;
			}
			set
			{
				Message previousValue = this._Message.Entity;
				if (((previousValue != value) 
							|| (this._Message.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Message.Entity = null;
						previousValue.Votes.Remove(this);
					}
					this._Message.Entity = value;
					if ((value != null))
					{
						value.Votes.Add(this);
						this._messageId = value.id;
					}
					else
					{
						this._messageId = default(System.Guid);
					}
					this.SendPropertyChanged("Message");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Vote", Storage="_User", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Votes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Votes.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthToken")]
	public partial class AuthToken : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _tokenId;
		
		private System.Guid _userId;
		
		private System.DateTime _lastUse;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntokenIdChanging(System.Guid value);
    partial void OntokenIdChanged();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OnlastUseChanging(System.DateTime value);
    partial void OnlastUseChanged();
    #endregion
		
		public AuthToken()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tokenId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid tokenId
		{
			get
			{
				return this._tokenId;
			}
			set
			{
				if ((this._tokenId != value))
				{
					this.OntokenIdChanging(value);
					this.SendPropertyChanging();
					this._tokenId = value;
					this.SendPropertyChanged("tokenId");
					this.OntokenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUse", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime lastUse
		{
			get
			{
				return this._lastUse;
			}
			set
			{
				if ((this._lastUse != value))
				{
					this.OnlastUseChanging(value);
					this.SendPropertyChanging();
					this._lastUse = value;
					this.SendPropertyChanged("lastUse");
					this.OnlastUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AuthToken", Storage="_User", ThisKey="userId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.AuthTokens.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.AuthTokens.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Autosave")]
	public partial class Autosave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _userId;
		
		private System.Guid _roomId;
		
		private string _message;
		
		private EntityRef<Room> _Room;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OnroomIdChanging(System.Guid value);
    partial void OnroomIdChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    #endregion
		
		public Autosave()
		{
			this._Room = default(EntityRef<Room>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroomIdChanging(value);
					this.SendPropertyChanging();
					this._roomId = value;
					this.SendPropertyChanged("roomId");
					this.OnroomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Autosave", Storage="_Room", ThisKey="roomId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.Autosaves.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.Autosaves.Add(this);
						this._roomId = value.id;
					}
					else
					{
						this._roomId = default(System.Guid);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Autosave", Storage="_User", ThisKey="userId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Autosaves.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Autosaves.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _name;
		
		private string _info;
		
		private bool _private;
		
		private bool _anonymous;
		
		private bool _requiresTrust;
		
		private bool _hidden;
		
		private bool _permanent;
		
		private EntitySet<Message> _Messages;
		
		private EntitySet<Autosave> _Autosaves;
		
		private EntitySet<UserRoom> _UserRooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OninfoChanging(string value);
    partial void OninfoChanged();
    partial void OnprivateChanging(bool value);
    partial void OnprivateChanged();
    partial void OnanonymousChanging(bool value);
    partial void OnanonymousChanged();
    partial void OnrequiresTrustChanging(bool value);
    partial void OnrequiresTrustChanged();
    partial void OnhiddenChanging(bool value);
    partial void OnhiddenChanged();
    partial void OnpermanentChanging(bool value);
    partial void OnpermanentChanged();
    #endregion
		
		public Room()
		{
			this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
			this._Autosaves = new EntitySet<Autosave>(new Action<Autosave>(this.attach_Autosaves), new Action<Autosave>(this.detach_Autosaves));
			this._UserRooms = new EntitySet<UserRoom>(new Action<UserRoom>(this.attach_UserRooms), new Action<UserRoom>(this.detach_UserRooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this.OninfoChanging(value);
					this.SendPropertyChanging();
					this._info = value;
					this.SendPropertyChanged("info");
					this.OninfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="private", Storage="_private", DbType="Bit NOT NULL")]
		public bool @private
		{
			get
			{
				return this._private;
			}
			set
			{
				if ((this._private != value))
				{
					this.OnprivateChanging(value);
					this.SendPropertyChanging();
					this._private = value;
					this.SendPropertyChanged("@private");
					this.OnprivateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anonymous", DbType="Bit NOT NULL")]
		public bool anonymous
		{
			get
			{
				return this._anonymous;
			}
			set
			{
				if ((this._anonymous != value))
				{
					this.OnanonymousChanging(value);
					this.SendPropertyChanging();
					this._anonymous = value;
					this.SendPropertyChanged("anonymous");
					this.OnanonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requiresTrust", DbType="Bit NOT NULL")]
		public bool requiresTrust
		{
			get
			{
				return this._requiresTrust;
			}
			set
			{
				if ((this._requiresTrust != value))
				{
					this.OnrequiresTrustChanging(value);
					this.SendPropertyChanging();
					this._requiresTrust = value;
					this.SendPropertyChanged("requiresTrust");
					this.OnrequiresTrustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hidden", DbType="Bit NOT NULL")]
		public bool hidden
		{
			get
			{
				return this._hidden;
			}
			set
			{
				if ((this._hidden != value))
				{
					this.OnhiddenChanging(value);
					this.SendPropertyChanging();
					this._hidden = value;
					this.SendPropertyChanged("hidden");
					this.OnhiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[permanent]", Storage="_permanent", DbType="Bit NOT NULL")]
		public bool permanent
		{
			get
			{
				return this._permanent;
			}
			set
			{
				if ((this._permanent != value))
				{
					this.OnpermanentChanging(value);
					this.SendPropertyChanging();
					this._permanent = value;
					this.SendPropertyChanged("permanent");
					this.OnpermanentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Message", Storage="_Messages", ThisKey="id", OtherKey="roomId")]
		public EntitySet<Message> Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Autosave", Storage="_Autosaves", ThisKey="id", OtherKey="roomId")]
		public EntitySet<Autosave> Autosaves
		{
			get
			{
				return this._Autosaves;
			}
			set
			{
				this._Autosaves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_UserRoom", Storage="_UserRooms", ThisKey="id", OtherKey="roomId")]
		public EntitySet<UserRoom> UserRooms
		{
			get
			{
				return this._UserRooms;
			}
			set
			{
				this._UserRooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
		
		private void attach_Autosaves(Autosave entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_Autosaves(Autosave entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
		
		private void attach_UserRooms(UserRoom entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_UserRooms(UserRoom entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoom")]
	public partial class UserRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _userId;
		
		private System.Guid _roomId;
		
		private bool _hasAccess;
		
		private bool _forgotten;
		
		private bool _nsfw;
		
		private bool _moderator;
		
		private bool _noticed;
		
		private short _sort;
		
		private System.DateTime _pointer;
		
		private System.DateTime _pointerLast;
		
		private System.Nullable<System.DateTime> _forgottenExpiration;
		
		private EntityRef<Room> _Room;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OnroomIdChanging(System.Guid value);
    partial void OnroomIdChanged();
    partial void OnhasAccessChanging(bool value);
    partial void OnhasAccessChanged();
    partial void OnforgottenChanging(bool value);
    partial void OnforgottenChanged();
    partial void OnnsfwChanging(bool value);
    partial void OnnsfwChanged();
    partial void OnmoderatorChanging(bool value);
    partial void OnmoderatorChanged();
    partial void OnnoticedChanging(bool value);
    partial void OnnoticedChanged();
    partial void OnsortChanging(short value);
    partial void OnsortChanged();
    partial void OnpointerChanging(System.DateTime value);
    partial void OnpointerChanged();
    partial void OnpointerLastChanging(System.DateTime value);
    partial void OnpointerLastChanged();
    partial void OnforgottenExpirationChanging(System.Nullable<System.DateTime> value);
    partial void OnforgottenExpirationChanged();
    #endregion
		
		public UserRoom()
		{
			this._Room = default(EntityRef<Room>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroomIdChanging(value);
					this.SendPropertyChanging();
					this._roomId = value;
					this.SendPropertyChanged("roomId");
					this.OnroomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasAccess", DbType="Bit NOT NULL")]
		public bool hasAccess
		{
			get
			{
				return this._hasAccess;
			}
			set
			{
				if ((this._hasAccess != value))
				{
					this.OnhasAccessChanging(value);
					this.SendPropertyChanging();
					this._hasAccess = value;
					this.SendPropertyChanged("hasAccess");
					this.OnhasAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_forgotten", DbType="Bit NOT NULL")]
		public bool forgotten
		{
			get
			{
				return this._forgotten;
			}
			set
			{
				if ((this._forgotten != value))
				{
					this.OnforgottenChanging(value);
					this.SendPropertyChanging();
					this._forgotten = value;
					this.SendPropertyChanged("forgotten");
					this.OnforgottenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nsfw", DbType="Bit NOT NULL")]
		public bool nsfw
		{
			get
			{
				return this._nsfw;
			}
			set
			{
				if ((this._nsfw != value))
				{
					this.OnnsfwChanging(value);
					this.SendPropertyChanging();
					this._nsfw = value;
					this.SendPropertyChanged("nsfw");
					this.OnnsfwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moderator", DbType="Bit NOT NULL")]
		public bool moderator
		{
			get
			{
				return this._moderator;
			}
			set
			{
				if ((this._moderator != value))
				{
					this.OnmoderatorChanging(value);
					this.SendPropertyChanging();
					this._moderator = value;
					this.SendPropertyChanged("moderator");
					this.OnmoderatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noticed", DbType="Bit NOT NULL")]
		public bool noticed
		{
			get
			{
				return this._noticed;
			}
			set
			{
				if ((this._noticed != value))
				{
					this.OnnoticedChanging(value);
					this.SendPropertyChanging();
					this._noticed = value;
					this.SendPropertyChanged("noticed");
					this.OnnoticedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="SmallInt NOT NULL")]
		public short sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pointer", DbType="DateTime NOT NULL")]
		public System.DateTime pointer
		{
			get
			{
				return this._pointer;
			}
			set
			{
				if ((this._pointer != value))
				{
					this.OnpointerChanging(value);
					this.SendPropertyChanging();
					this._pointer = value;
					this.SendPropertyChanged("pointer");
					this.OnpointerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pointerLast", DbType="DateTime NOT NULL")]
		public System.DateTime pointerLast
		{
			get
			{
				return this._pointerLast;
			}
			set
			{
				if ((this._pointerLast != value))
				{
					this.OnpointerLastChanging(value);
					this.SendPropertyChanging();
					this._pointerLast = value;
					this.SendPropertyChanged("pointerLast");
					this.OnpointerLastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_forgottenExpiration", DbType="DateTime2")]
		public System.Nullable<System.DateTime> forgottenExpiration
		{
			get
			{
				return this._forgottenExpiration;
			}
			set
			{
				if ((this._forgottenExpiration != value))
				{
					this.OnforgottenExpirationChanging(value);
					this.SendPropertyChanging();
					this._forgottenExpiration = value;
					this.SendPropertyChanged("forgottenExpiration");
					this.OnforgottenExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_UserRoom", Storage="_Room", ThisKey="roomId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.UserRooms.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.UserRooms.Add(this);
						this._roomId = value.id;
					}
					else
					{
						this._roomId = default(System.Guid);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRoom", Storage="_User", ThisKey="userId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRooms.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRooms.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_PrevAlias")]
	public partial class User_PrevAlia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _userId;
		
		private string _alias;
		
		private System.DateTime _changed;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OnaliasChanging(string value);
    partial void OnaliasChanged();
    partial void OnchangedChanging(System.DateTime value);
    partial void OnchangedChanged();
    #endregion
		
		public User_PrevAlia()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alias", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string alias
		{
			get
			{
				return this._alias;
			}
			set
			{
				if ((this._alias != value))
				{
					this.OnaliasChanging(value);
					this.SendPropertyChanging();
					this._alias = value;
					this.SendPropertyChanged("alias");
					this.OnaliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_changed", DbType="DateTime2 NOT NULL")]
		public System.DateTime changed
		{
			get
			{
				return this._changed;
			}
			set
			{
				if ((this._changed != value))
				{
					this.OnchangedChanging(value);
					this.SendPropertyChanging();
					this._changed = value;
					this.SendPropertyChanged("changed");
					this.OnchangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_PrevAlia", Storage="_User", ThisKey="userId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_PrevAlias.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_PrevAlias.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Plonk")]
	public partial class Plonk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _userId;
		
		private System.Guid _plonkedUserId;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OnplonkedUserIdChanging(System.Guid value);
    partial void OnplonkedUserIdChanged();
    #endregion
		
		public Plonk()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plonkedUserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid plonkedUserId
		{
			get
			{
				return this._plonkedUserId;
			}
			set
			{
				if ((this._plonkedUserId != value))
				{
					this.OnplonkedUserIdChanging(value);
					this.SendPropertyChanging();
					this._plonkedUserId = value;
					this.SendPropertyChanged("plonkedUserId");
					this.OnplonkedUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Plonk", Storage="_User", ThisKey="userId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Plonks.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Plonks.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfile")]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _bio;
		
		private string _website;
		
		private string _email;
		
		private string _location;
		
		private string _pronouns;
		
		private System.Nullable<System.DateTime> _birthdate;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnbioChanging(string value);
    partial void OnbioChanged();
    partial void OnwebsiteChanging(string value);
    partial void OnwebsiteChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OnpronounsChanging(string value);
    partial void OnpronounsChanged();
    partial void OnbirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdateChanged();
    #endregion
		
		public UserProfile()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bio", DbType="VarChar(MAX)")]
		public string bio
		{
			get
			{
				return this._bio;
			}
			set
			{
				if ((this._bio != value))
				{
					this.OnbioChanging(value);
					this.SendPropertyChanging();
					this._bio = value;
					this.SendPropertyChanged("bio");
					this.OnbioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_website", DbType="VarChar(MAX)")]
		public string website
		{
			get
			{
				return this._website;
			}
			set
			{
				if ((this._website != value))
				{
					this.OnwebsiteChanging(value);
					this.SendPropertyChanging();
					this._website = value;
					this.SendPropertyChanged("website");
					this.OnwebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(MAX)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="VarChar(MAX)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pronouns", DbType="VarChar(MAX)")]
		public string pronouns
		{
			get
			{
				return this._pronouns;
			}
			set
			{
				if ((this._pronouns != value))
				{
					this.OnpronounsChanging(value);
					this.SendPropertyChanging();
					this._pronouns = value;
					this.SendPropertyChanged("pronouns");
					this.OnpronounsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthdate", DbType="Date")]
		public System.Nullable<System.DateTime> birthdate
		{
			get
			{
				return this._birthdate;
			}
			set
			{
				if ((this._birthdate != value))
				{
					this.OnbirthdateChanging(value);
					this.SendPropertyChanging();
					this._birthdate = value;
					this.SendPropertyChanged("birthdate");
					this.OnbirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProfile", Storage="_User", ThisKey="id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserProfile = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserProfile = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _username;
		
		private string _password;
		
		private bool _deleted;
		
		private bool _trusted;
		
		private bool _aide;
		
		private bool _cosysop;
		
		private string _email;
		
		private byte _attachmentDisplay;
		
		private bool _enableSwipe;
		
		private bool _enablePredictiveText;
		
		private System.DateTime _lastActivity;
		
		private System.DateTime _created;
		
		private string _notes;
		
		private bool _twit;
		
		private string _miscDictionary;
		
		private EntitySet<Door> _Doors;
		
		private EntitySet<Message> _Messages;
		
		private EntitySet<Message> _Messages1;
		
		private EntitySet<User_IP> _User_IPs;
		
		private EntitySet<Vote> _Votes;
		
		private EntitySet<AuthToken> _AuthTokens;
		
		private EntitySet<Autosave> _Autosaves;
		
		private EntitySet<UserRoom> _UserRooms;
		
		private EntitySet<User_PrevAlia> _User_PrevAlias;
		
		private EntitySet<Plonk> _Plonks;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void OntrustedChanging(bool value);
    partial void OntrustedChanged();
    partial void OnaideChanging(bool value);
    partial void OnaideChanged();
    partial void OncosysopChanging(bool value);
    partial void OncosysopChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnattachmentDisplayChanging(byte value);
    partial void OnattachmentDisplayChanged();
    partial void OnenableSwipeChanging(bool value);
    partial void OnenableSwipeChanged();
    partial void OnenablePredictiveTextChanging(bool value);
    partial void OnenablePredictiveTextChanged();
    partial void OnlastActivityChanging(System.DateTime value);
    partial void OnlastActivityChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void OntwitChanging(bool value);
    partial void OntwitChanged();
    partial void OnmiscDictionaryChanging(string value);
    partial void OnmiscDictionaryChanged();
    #endregion
		
		public User()
		{
			this._Doors = new EntitySet<Door>(new Action<Door>(this.attach_Doors), new Action<Door>(this.detach_Doors));
			this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
			this._Messages1 = new EntitySet<Message>(new Action<Message>(this.attach_Messages1), new Action<Message>(this.detach_Messages1));
			this._User_IPs = new EntitySet<User_IP>(new Action<User_IP>(this.attach_User_IPs), new Action<User_IP>(this.detach_User_IPs));
			this._Votes = new EntitySet<Vote>(new Action<Vote>(this.attach_Votes), new Action<Vote>(this.detach_Votes));
			this._AuthTokens = new EntitySet<AuthToken>(new Action<AuthToken>(this.attach_AuthTokens), new Action<AuthToken>(this.detach_AuthTokens));
			this._Autosaves = new EntitySet<Autosave>(new Action<Autosave>(this.attach_Autosaves), new Action<Autosave>(this.detach_Autosaves));
			this._UserRooms = new EntitySet<UserRoom>(new Action<UserRoom>(this.attach_UserRooms), new Action<UserRoom>(this.detach_UserRooms));
			this._User_PrevAlias = new EntitySet<User_PrevAlia>(new Action<User_PrevAlia>(this.attach_User_PrevAlias), new Action<User_PrevAlia>(this.detach_User_PrevAlias));
			this._Plonks = new EntitySet<Plonk>(new Action<Plonk>(this.attach_Plonks), new Action<Plonk>(this.detach_Plonks));
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trusted", DbType="Bit NOT NULL")]
		public bool trusted
		{
			get
			{
				return this._trusted;
			}
			set
			{
				if ((this._trusted != value))
				{
					this.OntrustedChanging(value);
					this.SendPropertyChanging();
					this._trusted = value;
					this.SendPropertyChanged("trusted");
					this.OntrustedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aide", DbType="Bit NOT NULL")]
		public bool aide
		{
			get
			{
				return this._aide;
			}
			set
			{
				if ((this._aide != value))
				{
					this.OnaideChanging(value);
					this.SendPropertyChanging();
					this._aide = value;
					this.SendPropertyChanged("aide");
					this.OnaideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cosysop", DbType="Bit NOT NULL")]
		public bool cosysop
		{
			get
			{
				return this._cosysop;
			}
			set
			{
				if ((this._cosysop != value))
				{
					this.OncosysopChanging(value);
					this.SendPropertyChanging();
					this._cosysop = value;
					this.SendPropertyChanged("cosysop");
					this.OncosysopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(MAX)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attachmentDisplay", DbType="TinyInt NOT NULL")]
		public byte attachmentDisplay
		{
			get
			{
				return this._attachmentDisplay;
			}
			set
			{
				if ((this._attachmentDisplay != value))
				{
					this.OnattachmentDisplayChanging(value);
					this.SendPropertyChanging();
					this._attachmentDisplay = value;
					this.SendPropertyChanged("attachmentDisplay");
					this.OnattachmentDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enableSwipe", DbType="Bit NOT NULL")]
		public bool enableSwipe
		{
			get
			{
				return this._enableSwipe;
			}
			set
			{
				if ((this._enableSwipe != value))
				{
					this.OnenableSwipeChanging(value);
					this.SendPropertyChanging();
					this._enableSwipe = value;
					this.SendPropertyChanged("enableSwipe");
					this.OnenableSwipeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enablePredictiveText", DbType="Bit NOT NULL")]
		public bool enablePredictiveText
		{
			get
			{
				return this._enablePredictiveText;
			}
			set
			{
				if ((this._enablePredictiveText != value))
				{
					this.OnenablePredictiveTextChanging(value);
					this.SendPropertyChanging();
					this._enablePredictiveText = value;
					this.SendPropertyChanged("enablePredictiveText");
					this.OnenablePredictiveTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastActivity", DbType="DateTime2 NOT NULL")]
		public System.DateTime lastActivity
		{
			get
			{
				return this._lastActivity;
			}
			set
			{
				if ((this._lastActivity != value))
				{
					this.OnlastActivityChanging(value);
					this.SendPropertyChanging();
					this._lastActivity = value;
					this.SendPropertyChanged("lastActivity");
					this.OnlastActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime2 NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="VarChar(MAX)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_twit", DbType="Bit NOT NULL")]
		public bool twit
		{
			get
			{
				return this._twit;
			}
			set
			{
				if ((this._twit != value))
				{
					this.OntwitChanging(value);
					this.SendPropertyChanging();
					this._twit = value;
					this.SendPropertyChanged("twit");
					this.OntwitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_miscDictionary", DbType="VarChar(8000)")]
		public string miscDictionary
		{
			get
			{
				return this._miscDictionary;
			}
			set
			{
				if ((this._miscDictionary != value))
				{
					this.OnmiscDictionaryChanging(value);
					this.SendPropertyChanging();
					this._miscDictionary = value;
					this.SendPropertyChanged("miscDictionary");
					this.OnmiscDictionaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Door", Storage="_Doors", ThisKey="id", OtherKey="userId")]
		public EntitySet<Door> Doors
		{
			get
			{
				return this._Doors;
			}
			set
			{
				this._Doors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message", Storage="_Messages", ThisKey="id", OtherKey="recipientId")]
		public EntitySet<Message> Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message1", Storage="_Messages1", ThisKey="id", OtherKey="authorId")]
		public EntitySet<Message> Messages1
		{
			get
			{
				return this._Messages1;
			}
			set
			{
				this._Messages1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_IP", Storage="_User_IPs", ThisKey="id", OtherKey="userId")]
		public EntitySet<User_IP> User_IPs
		{
			get
			{
				return this._User_IPs;
			}
			set
			{
				this._User_IPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Vote", Storage="_Votes", ThisKey="id", OtherKey="userId")]
		public EntitySet<Vote> Votes
		{
			get
			{
				return this._Votes;
			}
			set
			{
				this._Votes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AuthToken", Storage="_AuthTokens", ThisKey="id", OtherKey="userId")]
		public EntitySet<AuthToken> AuthTokens
		{
			get
			{
				return this._AuthTokens;
			}
			set
			{
				this._AuthTokens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Autosave", Storage="_Autosaves", ThisKey="id", OtherKey="userId")]
		public EntitySet<Autosave> Autosaves
		{
			get
			{
				return this._Autosaves;
			}
			set
			{
				this._Autosaves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRoom", Storage="_UserRooms", ThisKey="id", OtherKey="userId")]
		public EntitySet<UserRoom> UserRooms
		{
			get
			{
				return this._UserRooms;
			}
			set
			{
				this._UserRooms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_PrevAlia", Storage="_User_PrevAlias", ThisKey="id", OtherKey="userId")]
		public EntitySet<User_PrevAlia> User_PrevAlias
		{
			get
			{
				return this._User_PrevAlias;
			}
			set
			{
				this._User_PrevAlias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Plonk", Storage="_Plonks", ThisKey="id", OtherKey="userId")]
		public EntitySet<Plonk> Plonks
		{
			get
			{
				return this._Plonks;
			}
			set
			{
				this._Plonks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProfile", Storage="_UserProfile", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.User = null;
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Doors(Door entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Doors(Door entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Messages1(Message entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Messages1(Message entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_User_IPs(User_IP entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_IPs(User_IP entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Votes(Vote entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Votes(Vote entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_AuthTokens(AuthToken entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_AuthTokens(AuthToken entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Autosaves(Autosave entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Autosaves(Autosave entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserRooms(UserRoom entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRooms(UserRoom entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_PrevAlias(User_PrevAlia entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_PrevAlias(User_PrevAlia entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Plonks(Plonk entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Plonks(Plonk entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	public partial class GetUserRoomsResult
	{
		
		private System.Nullable<System.Guid> _roomId;
		
		public GetUserRoomsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					this._roomId = value;
				}
			}
		}
	}
	
	public partial class GetUserMessagesResult
	{
		
		private System.Guid _id;
		
		private System.Guid _roomId;
		
		private System.Guid _authorId;
		
		private System.Nullable<System.Guid> _recipientId;
		
		private System.DateTime _date;
		
		private string _body;
		
		private bool _isNew;
		
		private string _originalRoomName;
		
		public GetUserMessagesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					this._roomId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid authorId
		{
			get
			{
				return this._authorId;
			}
			set
			{
				if ((this._authorId != value))
				{
					this._authorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recipientId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> recipientId
		{
			get
			{
				return this._recipientId;
			}
			set
			{
				if ((this._recipientId != value))
				{
					this._recipientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime2 NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this._date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this._body = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isNew", DbType="Bit NOT NULL")]
		public bool isNew
		{
			get
			{
				return this._isNew;
			}
			set
			{
				if ((this._isNew != value))
				{
					this._isNew = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_originalRoomName", DbType="VarChar(50)")]
		public string originalRoomName
		{
			get
			{
				return this._originalRoomName;
			}
			set
			{
				if ((this._originalRoomName != value))
				{
					this._originalRoomName = value;
				}
			}
		}
	}
	
	public partial class GetNumNewMessagesResult
	{
		
		private System.Guid _roomId;
		
		private int _numNew;
		
		private int _sort;
		
		public GetNumNewMessagesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					this._roomId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numNew", DbType="Int NOT NULL")]
		public int numNew
		{
			get
			{
				return this._numNew;
			}
			set
			{
				if ((this._numNew != value))
				{
					this._numNew = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="Int NOT NULL")]
		public int sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this._sort = value;
				}
			}
		}
	}
	
	public partial class GetLastMessagesResult
	{
		
		private System.Nullable<System.Guid> _roomId;
		
		private System.Nullable<System.Guid> _messageId;
		
		private System.Nullable<System.DateTime> _messageDate;
		
		public GetLastMessagesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					this._roomId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> messageId
		{
			get
			{
				return this._messageId;
			}
			set
			{
				if ((this._messageId != value))
				{
					this._messageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> messageDate
		{
			get
			{
				return this._messageDate;
			}
			set
			{
				if ((this._messageDate != value))
				{
					this._messageDate = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
