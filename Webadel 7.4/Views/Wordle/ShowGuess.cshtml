@model Webadel7.Controllers.WordleController.Check_Model
@{ Layout = null; }

@if (Model.IsCorrect) {
    <script type="text/javascript">

        var tries = $("#guesses > .guess").length;

        $("form#wordle").hide();
        $("#success #tries").text(tries);
        $("#success").show();
    </script>
}

<script type="text/javascript">
    @* can always promot letters to the correct state, and once there, can never be changed *@
    @foreach (var guess in Model.Guesses.Where(o => o.State == Webadel7.Controllers.WordleController.Check_Model.States.Correct)) {
        @: SetAlphaLetter("@(guess.Letter)", "Correct");
    }

    @* can only mark letters as "wrong place" if they have not already been marked Correct *@
    @foreach (var guess in Model.Guesses.Where(o => o.State == Webadel7.Controllers.WordleController.Check_Model.States.WrongPlace)) {
        @: if (!$("#alphabet #letter-@(guess.Letter)").hasClass("Correct")) SetAlphaLetter("@(guess.Letter)", "WrongPlace");
    }

    @* can only mark letters as "incorrect" if they have not already been marked Correct or WrongPlace *@
    @foreach (var guess in Model.Guesses.Where(o => o.State == Webadel7.Controllers.WordleController.Check_Model.States.Incorrect)) {
        @: if (!$("#alphabet #letter-@(guess.Letter)").hasClass("Correct") && !$("#alphabet #letter-@(guess.Letter)").hasClass("WrongPlace")) SetAlphaLetter("@(guess.Letter)", "Incorrect");
    }
</script>

<div class="guess">
    @foreach (var guess in Model.Guesses) {
        <span class="@guess.State">@guess.Letter</span>
    }
</div>